import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import Icon from '@/components/ui/icon';
import { adminAuth } from '@/lib/admin-auth';
import { useToast } from '@/hooks/use-toast';

export default function AdminSettings() {
  const [currentPassword, setCurrentPassword] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [email, setEmail] = useState(localStorage.getItem('admin_2fa_email') || '');
  const [enable2FA, setEnable2FA] = useState(localStorage.getItem('admin_2fa_enabled') === 'true');
  const navigate = useNavigate();
  const { toast } = useToast();

  const handlePasswordChange = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!currentPassword || !newPassword || !confirmPassword) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è",
        variant: "destructive"
      });
      return;
    }

    if (newPassword !== confirmPassword) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç",
        variant: "destructive"
      });
      return;
    }

    if (newPassword.length < 6) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);

    try {
      const response = await fetch('https://functions.poehali.dev/a5ac7b7d-d827-4215-869d-0bb5f5eb885f', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Auth-Token': adminAuth.getToken() || ''
        },
        body: JSON.stringify({
          action: 'change_password',
          current_password: currentPassword,
          new_password: newPassword
        })
      });

      const data = await response.json();

      if (data.success) {
        toast({
          title: "‚úÖ –ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω—ë–Ω",
          description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ",
          className: "bg-green-50 border-green-500"
        });
        setCurrentPassword('');
        setNewPassword('');
        setConfirmPassword('');
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞",
          description: data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å",
          variant: "destructive"
        });
      }
    } catch (error: any) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.message || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  const toggle2FA = () => {
    const newValue = !enable2FA;
    setEnable2FA(newValue);
    localStorage.setItem('admin_2fa_enabled', String(newValue));
    
    if (newValue && email) {
      localStorage.setItem('admin_2fa_email', email);
      toast({
        title: "‚úÖ 2FA –≤–∫–ª—é—á–µ–Ω–∞",
        description: `–ö–æ–¥—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ ${email}`,
        className: "bg-green-50 border-green-500"
      });
    } else {
      toast({
        title: "üîì 2FA –æ—Ç–∫–ª—é—á–µ–Ω–∞",
        description: "–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞"
      });
    }
  };

  const saveEmail = () => {
    if (!email || !email.includes('@')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email",
        variant: "destructive"
      });
      return;
    }

    localStorage.setItem('admin_2fa_email', email);
    toast({
      title: "‚úÖ Email —Å–æ—Ö—Ä–∞–Ω—ë–Ω",
      description: "Email –¥–ª—è 2FA –æ–±–Ω–æ–≤–ª—ë–Ω",
      className: "bg-green-50 border-green-500"
    });
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-4xl mx-auto">
        <div className="flex items-center justify-between mb-6">
          <div>
            <h1 className="text-3xl font-bold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h1>
            <p className="text-gray-600 mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–º –∏ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π</p>
          </div>
          <Button onClick={() => navigate('/admin/dashboard')} variant="outline">
            <Icon name="ArrowLeft" size={16} className="mr-2" />
            –ù–∞–∑–∞–¥
          </Button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Key" size={24} className="text-primary" />
                –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
              </CardTitle>
              <CardDescription>
                –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
              </CardDescription>
            </CardHeader>
            <CardContent>
              <form onSubmit={handlePasswordChange} className="space-y-4">
                <div>
                  <label className="text-sm font-medium mb-2 block">
                    –¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å
                  </label>
                  <Input
                    type="password"
                    placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                    value={currentPassword}
                    onChange={(e) => setCurrentPassword(e.target.value)}
                    className="h-11"
                  />
                </div>

                <div>
                  <label className="text-sm font-medium mb-2 block">
                    –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
                  </label>
                  <Input
                    type="password"
                    placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                    value={newPassword}
                    onChange={(e) => setNewPassword(e.target.value)}
                    className="h-11"
                  />
                  <p className="text-xs text-gray-500 mt-1">
                    –ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤
                  </p>
                </div>

                <div>
                  <label className="text-sm font-medium mb-2 block">
                    –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
                  </label>
                  <Input
                    type="password"
                    placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                    value={confirmPassword}
                    onChange={(e) => setConfirmPassword(e.target.value)}
                    className="h-11"
                  />
                </div>

                <Button
                  type="submit"
                  disabled={isLoading}
                  className="w-full h-11"
                >
                  {isLoading ? (
                    <>
                      <Icon name="Loader2" size={18} className="mr-2 animate-spin" />
                      –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...
                    </>
                  ) : (
                    <>
                      <Icon name="Check" size={18} className="mr-2" />
                      –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                    </>
                  )}
                </Button>
              </form>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Shield" size={24} className="text-primary" />
                –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
              </CardTitle>
              <CardDescription>
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <div className="flex items-center gap-3">
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center ${enable2FA ? 'bg-green-100' : 'bg-gray-200'}`}>
                    <Icon 
                      name={enable2FA ? "ShieldCheck" : "ShieldOff"} 
                      size={24} 
                      className={enable2FA ? 'text-green-600' : 'text-gray-500'}
                    />
                  </div>
                  <div>
                    <p className="font-semibold">
                      {enable2FA ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}
                    </p>
                    <p className="text-xs text-gray-600">
                      {enable2FA ? '–í—Ö–æ–¥ –∑–∞—â–∏—â—ë–Ω –∫–æ–¥–æ–º' : '–¢–æ–ª—å–∫–æ –ø–∞—Ä–æ–ª—å'}
                    </p>
                  </div>
                </div>
                <Button
                  onClick={toggle2FA}
                  variant={enable2FA ? "destructive" : "default"}
                  size="sm"
                >
                  {enable2FA ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
                </Button>
              </div>

              {enable2FA && (
                <>
                  <div>
                    <label className="text-sm font-medium mb-2 block">
                      Email –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤
                    </label>
                    <Input
                      type="email"
                      placeholder="admin@example.com"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="h-11"
                    />
                    <p className="text-xs text-gray-500 mt-1">
                      –ù–∞ —ç—Ç–æ—Ç email –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∫–æ–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                    </p>
                  </div>

                  <Button
                    onClick={saveEmail}
                    variant="outline"
                    className="w-full h-11"
                  >
                    <Icon name="Mail" size={18} className="mr-2" />
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å email
                  </Button>

                  <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div className="flex items-start gap-3">
                      <Icon name="Info" size={18} className="text-blue-600 flex-shrink-0 mt-0.5" />
                      <div className="text-sm text-blue-800">
                        <p className="font-semibold mb-1">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç 2FA:</p>
                        <ol className="text-xs space-y-1 list-decimal list-inside">
                          <li>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞</li>
                          <li>–ü–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –Ω–∞ email</li>
                          <li>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Ö–æ–¥–∞</li>
                        </ol>
                      </div>
                    </div>
                  </div>
                </>
              )}
            </CardContent>
          </Card>
        </div>

        <Card className="mt-6">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Icon name="Info" size={24} className="text-primary" />
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="flex items-start gap-3 p-4 bg-gray-50 rounded-lg">
                <Icon name="User" size={20} className="text-gray-600 flex-shrink-0 mt-0.5" />
                <div>
                  <p className="font-semibold text-sm">–í–∞—à–∞ —Ä–æ–ª—å</p>
                  <p className="text-xs text-gray-600 mt-1">
                    {adminAuth.isAdmin() ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)' : '–ú–µ–Ω–µ–¥–∂–µ—Ä (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø)'}
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-3 p-4 bg-gray-50 rounded-lg">
                <Icon name="Clock" size={20} className="text-gray-600 flex-shrink-0 mt-0.5" />
                <div>
                  <p className="font-semibold text-sm">–°—Ä–æ–∫ —Å–µ—Å—Å–∏–∏</p>
                  <p className="text-xs text-gray-600 mt-1">
                    24 —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –≤—Ö–æ–¥–∞
                  </p>
                </div>
              </div>
            </div>

            <div className="mt-4 p-4 bg-amber-50 border border-amber-200 rounded-lg">
              <div className="flex items-start gap-3">
                <Icon name="AlertTriangle" size={20} className="text-amber-600 flex-shrink-0 mt-0.5" />
                <div className="text-sm">
                  <p className="font-semibold text-amber-900 mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
                  <ul className="text-xs text-amber-800 space-y-1">
                    <li>‚úì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤)</li>
                    <li>‚úì –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é</li>
                    <li>‚úì –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ-–ø–∞—Ä–æ–ª–∏ –≤ production</li>
                    <li>‚úì –ú–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–∞–∑ –≤ 3 –º–µ—Å—è—Ü–∞</li>
                  </ul>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
