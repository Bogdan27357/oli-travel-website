import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import Icon from '@/components/ui/icon';
import { adminAuth } from '@/lib/admin-auth';
import { useToast } from '@/hooks/use-toast';

export default function AdminLogin() {
  const [password, setPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();
  const { toast } = useToast();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!password) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);

    try {
      const result = await adminAuth.login(password);
      
      if (result.success) {
        toast({
          title: "‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥",
          description: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
          className: "bg-green-50 border-green-500"
        });
        navigate('/admin/dashboard');
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞",
          description: result.error || "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å",
          variant: "destructive"
        });
      }
    } catch (error: any) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.message || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center p-4">
      <Card className="w-full max-w-md shadow-2xl">
        <CardHeader className="text-center">
          <div className="mx-auto w-16 h-16 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center mb-4">
            <Icon name="Lock" size={32} className="text-white" />
          </div>
          <CardTitle className="text-3xl">–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å</CardTitle>
          <CardDescription>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <div className="flex items-start gap-3">
              <Icon name="Info" size={20} className="text-blue-600 flex-shrink-0 mt-0.5" />
              <div className="text-sm">
                <p className="font-semibold text-blue-900 mb-2">–î–µ–º–æ-–ø–∞—Ä–æ–ª–∏</p>
                <ul className="text-xs text-blue-700 space-y-1">
                  <li>üë§ <strong>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</strong> <code className="bg-blue-100 px-2 py-0.5 rounded font-mono">admin2025</code></li>
                  <li>üëî <strong>–ú–µ–Ω–µ–¥–∂–µ—Ä:</strong> <code className="bg-blue-100 px-2 py-0.5 rounded font-mono">manager2025</code></li>
                </ul>
                <p className="text-xs text-blue-600 mt-2">
                  üí° –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
                </p>
              </div>
            </div>
          </div>
          
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–ü–∞—Ä–æ–ª—å</label>
              <Input
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="h-12"
                autoFocus
              />
            </div>

            <Button
              type="submit"
              disabled={isLoading}
              className="w-full h-12 text-lg bg-gradient-to-r from-primary to-secondary"
            >
              {isLoading ? (
                <>
                  <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                  –í—Ö–æ–¥...
                </>
              ) : (
                <>
                  <Icon name="LogIn" size={20} className="mr-2" />
                  –í–æ–π—Ç–∏
                </>
              )}
            </Button>
          </form>

          <div className="mt-6 text-center">
            <Button
              variant="ghost"
              onClick={() => navigate('/')}
              className="text-sm"
            >
              <Icon name="ArrowLeft" size={16} className="mr-2" />
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}