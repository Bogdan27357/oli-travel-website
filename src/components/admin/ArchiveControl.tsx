import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface ArchiveControlProps {
  sessionId: string | null;
  isArchived: boolean;
  onArchiveToggle: (sessionId: string, archived: boolean) => void;
}

export default function ArchiveControl({ sessionId, isArchived, onArchiveToggle }: ArchiveControlProps) {
  const { toast } = useToast();

  if (!sessionId) {
    return (
      <Card>
        <CardContent className="pt-6">
          <div className="text-center text-gray-400">
            <Icon name="Archive" size={48} className="mx-auto mb-2" />
            <p>–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  const handleToggle = () => {
    onArchiveToggle(sessionId, !isArchived);
    
    toast({
      title: isArchived ? 'üìÇ –ß–∞—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : 'üìÅ –ß–∞—Ç –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω',
      description: isArchived 
        ? '–ß–∞—Ç –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ' 
        : '–ß–∞—Ç –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –∞—Ä—Ö–∏–≤',
      duration: 3000
    });
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-lg">
          <Icon name="Archive" size={18} />
          –ê—Ä—Ö–∏–≤–∞—Ü–∏—è
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className={`p-4 rounded-lg border-2 ${
          isArchived 
            ? 'bg-gray-50 border-gray-300' 
            : 'bg-green-50 border-green-300'
        }`}>
          <div className="flex items-center gap-3 mb-3">
            <Icon 
              name={isArchived ? 'Archive' : 'CheckCircle'} 
              size={24} 
              className={isArchived ? 'text-gray-600' : 'text-green-600'} 
            />
            <div>
              <p className="font-semibold">
                {isArchived ? '–í –∞—Ä—Ö–∏–≤–µ' : '–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç'}
              </p>
              <p className="text-sm text-gray-600">
                {isArchived 
                  ? '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω –∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω'
                  : '–î–∏–∞–ª–æ–≥ –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è'
                }
              </p>
            </div>
          </div>
        </div>

        <Button
          onClick={handleToggle}
          variant={isArchived ? 'outline' : 'default'}
          className={`w-full ${
            !isArchived && 'bg-gradient-to-r from-primary to-secondary'
          }`}
        >
          <Icon 
            name={isArchived ? 'ArchiveRestore' : 'Archive'} 
            size={18} 
            className="mr-2" 
          />
          {isArchived ? '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∞—Ä—Ö–∏–≤–∞' : '–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤'}
        </Button>

        <div className="text-xs text-gray-500 space-y-1 pt-2 border-t">
          <p><strong>üìÅ –ê—Ä—Ö–∏–≤:</strong> –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏</p>
          <p><strong>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ:</strong> —Ç—Ä–µ–±—É—é—Ç –æ—Ç–≤–µ—Ç–∞</p>
          <p>–ê—Ä—Ö–∏–≤–Ω—ã–µ —á–∞—Ç—ã –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</p>
        </div>
      </CardContent>
    </Card>
  );
}
