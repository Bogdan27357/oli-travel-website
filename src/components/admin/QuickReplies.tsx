import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';
import { QuickReply } from '@/types/admin';
import { useToast } from '@/hooks/use-toast';

interface QuickRepliesProps {
  onSelectReply: (message: string) => void;
}

const DEFAULT_REPLIES: QuickReply[] = [
  {
    id: '1',
    title: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
    message: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
    category: '–û–±—â–µ–µ'
  },
  {
    id: '2',
    title: '–£—Ç–æ—á–Ω–µ–Ω–∏–µ',
    message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–µ–µ',
    category: '–û–±—â–µ–µ'
  },
  {
    id: '3',
    title: '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã',
    message: '–ù–∞—à –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: –ü–ù-–ü–¢ —Å 9:00 –¥–æ 18:00',
    category: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
  },
  {
    id: '4',
    title: '–ü—Ä–∏–Ω—è—Ç–æ',
    message: '–ü—Ä–∏–Ω—è—Ç–æ! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏',
    category: '–ó–∞–∫–∞–∑'
  },
  {
    id: '5',
    title: '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
    message: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å üòä',
    category: '–û–±—â–µ–µ'
  },
  {
    id: '6',
    title: '–û–∂–∏–¥–∞–Ω–∏–µ',
    message: '–ú–∏–Ω—É—Ç–æ—á–∫—É, –ø—Ä–æ–≤–µ—Ä—è—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...',
    category: '–û–±—â–µ–µ'
  }
];

export default function QuickReplies({ onSelectReply }: QuickRepliesProps) {
  const [replies, setReplies] = useState<QuickReply[]>(DEFAULT_REPLIES);
  const [isCreating, setIsCreating] = useState(false);
  const [newTitle, setNewTitle] = useState('');
  const [newMessage, setNewMessage] = useState('');
  const { toast } = useToast();

  const handleSelectReply = (reply: QuickReply) => {
    onSelectReply(reply.message);
    toast({
      title: '‚úÖ –®–∞–±–ª–æ–Ω –≤—Å—Ç–∞–≤–ª–µ–Ω',
      description: reply.title,
      duration: 2000
    });
  };

  const handleCreateReply = () => {
    if (!newTitle.trim() || !newMessage.trim()) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞',
        variant: 'destructive'
      });
      return;
    }

    const newReply: QuickReply = {
      id: Date.now().toString(),
      title: newTitle.trim(),
      message: newMessage.trim(),
      category: '–°–≤–æ–∏'
    };

    setReplies([...replies, newReply]);
    setNewTitle('');
    setNewMessage('');
    setIsCreating(false);

    toast({
      title: '‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω',
      description: newReply.title,
      duration: 2000
    });
  };

  const handleDeleteReply = (id: string) => {
    setReplies(replies.filter(r => r.id !== id));
    toast({
      title: 'üóëÔ∏è –®–∞–±–ª–æ–Ω —É–¥–∞–ª—ë–Ω',
      duration: 2000
    });
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-lg">
          <Icon name="MessageSquareText" size={18} />
          –ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-3">
        <div className="space-y-2 max-h-[400px] overflow-y-auto pr-2">
          {replies.map((reply) => (
            <div
              key={reply.id}
              className="group p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors border border-gray-200"
            >
              <div className="flex items-start justify-between gap-2">
                <button
                  onClick={() => handleSelectReply(reply)}
                  className="flex-1 text-left"
                >
                  <p className="font-medium text-sm mb-1 flex items-center gap-2">
                    {reply.title}
                    <span className="text-xs text-gray-500 font-normal">
                      {reply.category}
                    </span>
                  </p>
                  <p className="text-xs text-gray-600 line-clamp-2">
                    {reply.message}
                  </p>
                </button>
                {reply.category === '–°–≤–æ–∏' && (
                  <Button
                    size="sm"
                    variant="ghost"
                    onClick={() => handleDeleteReply(reply.id)}
                    className="opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0"
                  >
                    <Icon name="Trash2" size={14} className="text-red-500" />
                  </Button>
                )}
              </div>
            </div>
          ))}
        </div>

        {isCreating ? (
          <div className="space-y-2 p-3 bg-blue-50 rounded-lg border border-blue-200">
            <Input
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"
              value={newTitle}
              onChange={(e) => setNewTitle(e.target.value)}
              className="h-9"
            />
            <Textarea
              placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
              value={newMessage}
              onChange={(e) => setNewMessage(e.target.value)}
              rows={3}
              className="resize-none"
            />
            <div className="flex gap-2">
              <Button
                size="sm"
                onClick={handleCreateReply}
                className="flex-1 bg-gradient-to-r from-primary to-secondary"
              >
                <Icon name="Check" size={16} className="mr-1" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
              <Button
                size="sm"
                variant="outline"
                onClick={() => {
                  setIsCreating(false);
                  setNewTitle('');
                  setNewMessage('');
                }}
              >
                <Icon name="X" size={16} />
              </Button>
            </div>
          </div>
        ) : (
          <Button
            onClick={() => setIsCreating(true)}
            variant="outline"
            className="w-full"
          >
            <Icon name="Plus" size={16} className="mr-2" />
            –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —à–∞–±–ª–æ–Ω
          </Button>
        )}
      </CardContent>
    </Card>
  );
}
